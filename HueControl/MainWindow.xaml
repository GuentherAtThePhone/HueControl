<Window x:Class="HueControl.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HueControl"
        mc:Ignorable="d"
        Title="HueControl" Height="600" Width="800">

    <Window.Resources>

        <!-- ToogleButton Style -->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Margin="8" x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#494b50"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#595b60"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- CheckBox Style -->
        <Style TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Grid >
                                <Border Width="25" Height="10" Background="LightGray" CornerRadius="5" Margin="5,0"></Border>
                                <Border x:Name="button" Height="15" Width="15" CornerRadius="7.5" HorizontalAlignment="Left"  ></Border>
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="right">
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="0,0,0,0" To="28,0,0,0" >
                                    <ThicknessAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                            <Storyboard x:Key="left">
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="28,0,0,0" To="0,0,0,0" >
                                    <ThicknessAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="leftt"></RemoveStoryboard>
                                    <BeginStoryboard Storyboard="{StaticResource right}" x:Name="rightt" ></BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter TargetName="button" Property="Background" Value="#757575"></Setter>
                                <Setter Property="Content" Value="Off"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="rightt"></RemoveStoryboard>
                                    <BeginStoryboard Storyboard="{StaticResource left}" x:Name="leftt" ></BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter TargetName="button" Property="Background" Value="#20BF55"></Setter>
                                <Setter Property="Content" Value="On"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>

    <Grid Background="#FFEEEEEE">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>

        <!--#region ListMenu Left Side Top-->
        <ScrollViewer Grid.Column="0" Grid.RowSpan="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <StackPanel Background="#252525">

                <ToggleButton Style="{DynamicResource ToggleButtonStyle1}"
                              Name="TbRooms"
                              Foreground="White" 
                              Focusable="False"
                              ClickMode="Press"
                              Background="#393b3f"
                              Content="Rooms"
                              FontSize="16"
                              Click="TbRooms_Click">

                </ToggleButton>

                <ListView Name="LvRoomsList" 
                      HorizontalContentAlignment="Stretch" 
                      Background="#252525" 
                      Visibility="Visible"
                      IsSynchronizedWithCurrentItem="True"
                      SelectionMode="Single"
                      BorderThickness="0"
                          Margin="10,0,0,0"
                          SelectionChanged="LvRoomsList_SelectionChanged">

                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">

                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#393b40"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#393b40"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>

                                <DataTrigger Binding="{Binding ElementName=TbRooms,
                                                   Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=TbRooms,
                                                   Path=IsChecked}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>

                            </Style.Triggers>


                            <Setter Property="Background" Value="#292b2f"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <Border Background="{TemplateBinding Background}"
                                        CornerRadius="4"
                                        Margin="8,8,8,8">

                                            <Label Content="{Binding Name}"
                                                Foreground="White"/>


                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                        </Style>
                    </ListView.ItemContainerStyle>

                </ListView>

                <ToggleButton Style="{DynamicResource ToggleButtonStyle1}"
                              Name="TbLights"
                              Foreground="White" 
                              Focusable="False"
                              ClickMode="Press"
                              Background="#393b3f"
                              Content="Lights"
                              FontSize="16"
                              Click="TbLights_Click">

                </ToggleButton>

                <ListView Name="LvLightsList" 
                      HorizontalContentAlignment="Stretch" 
                      Background="#252525" 
                      Visibility="Visible"
                      IsSynchronizedWithCurrentItem="True"
                      SelectionMode="Single"
                      BorderThickness="0"
                          Margin="10,0,0,0"
                          SelectionChanged="LvLightsList_SelectionChanged">

                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">

                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#393b40"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#393b40"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>

                                <DataTrigger Binding="{Binding ElementName=TbLights,
                                                   Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=TbLights,
                                                   Path=IsChecked}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>

                            </Style.Triggers>


                            <Setter Property="Background" Value="#292b2f"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <Border Background="{TemplateBinding Background}"
                                        CornerRadius="4"
                                        Margin="8,8,8,8">

                                            <Label Content="{Binding Name}"
                                                Foreground="White"/>


                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>

            </StackPanel>

        </ScrollViewer>

        <!--#endregion-->

        <Grid Background="#252525" Grid.Column="0" Grid.Row="1">
            <Image x:Name="ImgSettings" Source="C:\Users\Coolj\source\repos\HueTest\HueTest\Pictures\settings.png" MouseDown="ImgSettings_MouseDown" HorizontalAlignment="Right" Margin="4" Cursor="Hand"/>
        </Grid>


        <Grid x:Name="GridSettings" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Visibility="Collapsed">

            <Grid>
                <StackPanel Margin="10">
                    <DockPanel LastChildFill="True">

                        <Label Content="IP:" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <TextBox x:Name="txtIp" HorizontalAlignment="Right" TextWrapping="Wrap" Text="192.168.178.47" VerticalAlignment="Center"/>
                        <Button x:Name="BtnSearchBridge" HorizontalAlignment="Right" Content="Search for Bridge" VerticalAlignment="Center" Click="BtnSearchBridge_Click"/>
                    </DockPanel>

                    <DockPanel LastChildFill="True" Margin="0,10,0,0">
                        <Label Content="Username:"  HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <TextBox x:Name="txtUsername" HorizontalAlignment="Right" TextWrapping="Wrap" Text="bU14XCakBfOQWw92eqGOg9CeJuTqAcPJMafh0xLd" VerticalAlignment="Center"/>
                        <Button x:Name="BtnCreateUser" HorizontalAlignment="Right" Content="Create a new Username" VerticalAlignment="Center" Click="BtnCreateUser_Click"/>
                    </DockPanel>

                    <DockPanel Margin="0,20,0,0" LastChildFill="False" HorizontalAlignment="Right">
                        <Label x:Name="lblCheckConnectionResult" Content="Not Checked" Margin="0,0,20,0"/>
                        <Button x:Name="BtnCheckConnection" HorizontalAlignment="Right" Content="Check Bridge Connection" Click="BtnCheckConnection_Click"/>
                    </DockPanel>

                </StackPanel>

                <DockPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10">
                    <Button Content="Close" Margin="2" FontSize="14"/>
                    <Button Content="Apply" Margin="2" FontSize="14"/>
                    <Button Content="Apply and Close" Margin="2" FontSize="14"/>
                </DockPanel>
            </Grid>

            <Grid  x:Name="GridCreateUser" Visibility="Visible" Background="White">
                <StackPanel>
                    <Label x:Name="lblCreateUserState" Content="Searching for Hue Bridge" HorizontalAlignment="Center" FontSize="20" FontWeight="SemiBold" Margin="0,50,0,0"/>
                    <Image Source="C:\Users\Coolj\source\repos\HueTest\HueTest\Pictures\HueBridge.png" Stretch="Fill" MaxHeight="550" MaxWidth="550"/>
                    <TextBox x:Name="TbIpCreateUser" Text="" HorizontalAlignment="Center" FontSize="18" MinWidth="100"/>
                    <Button Content=" Cancel " HorizontalAlignment="Right" FontSize="16" FontWeight="SemiBold" Margin="20"/>
                </StackPanel>

            </Grid>



        </Grid>



        <Grid x:Name="GridRoomsOverview" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Visibility="Visible">
            <ScrollViewer >
                <StackPanel Margin="20 0">
                    <ListView x:Name="ListViewRoomsOverview"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              Background="#FFEEEEEE"
                              BorderThickness="0"
                              SelectionChanged="ListViewRoomsOverview_SelectionChanged"
                              MouseDoubleClick="ListViewRoomsOverview_MouseDoubleClick">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border Height="100"
                                        Width="160"
                                        CornerRadius="4"
                                        BorderThickness="1"
                                        BorderBrush="Black"
                                        Margin="10">
                                    <Grid Height="90" Margin="4">
                                        <Label Content="{Binding Name}" VerticalAlignment="Top"/>
                                        <DockPanel LastChildFill="True" VerticalAlignment="Bottom">
                                            <Slider x:Name="SlBrightnessRoomOverview" Value="{Binding Action.Bri}" Interval="1" IsSnapToTickEnabled="True" Maximum="254" Minimum="0" Width="100" ValueChanged="SlBrightnessRoomOverview_ValueChanged"/>
                                            <CheckBox x:Name="CbIsOnRoomOverView" DockPanel.Dock="Right" HorizontalAlignment="Right" IsChecked="{Binding State.Any_On}" Click="CbIsOnRoomOverView_Click"/>
                                        </DockPanel>
                                    </Grid>
                                </Border>

                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Margin="0"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>
                </StackPanel>
            </ScrollViewer>
        </Grid>


        <Grid x:Name="GridSingleRoom" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Visibility="Collapsed">
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                <StackPanel>
                    <Label x:Name="lblSingleRoomName" HorizontalAlignment="Center" Content="Raumname" FontSize="20" FontWeight="Bold"/>

                    <ListView Name="LvSingleRoomsList" 
                      HorizontalContentAlignment="Stretch"
                      Visibility="Visible"
                      Background="#FFEEEEEE"
                      IsSynchronizedWithCurrentItem="False"
                      SelectionMode="Single"
                      BorderThickness="0"
                          Margin="10,0,0,0"
                          SelectionChanged="LvSingleRoomsList_SelectionChanged">

                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">

                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#FFDDDDDD"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFC4E5F6"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </Trigger>

                                </Style.Triggers>


                                <Setter Property="Background" Value="{Binding State.Backcolour}"/>

                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <Border Background="{TemplateBinding Background}"
                                        CornerRadius="4"
                                        Margin="8,8,8,8">

                                                <Grid Margin="4">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition Width="60"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>

                                                    <Label Grid.Row="0" Content="{Binding Name}"
                                                       Foreground="Black"/>

                                                    <Slider x:Name="SlBrightnessSingleRoom" Grid.Row="1" Maximum="255" Minimum="0" Value="{Binding State.Bri}" ValueChanged="SlBrightnessSingleRoom_ValueChanged"/>

                                                    <CheckBox x:Name="CbIsOnSingleRoom" Grid.Column="1" Grid.Row="1" IsChecked="{Binding State.On}" HorizontalAlignment="Right" Click="CbIsOnSingleRoom_Click"/>
                                                </Grid>


                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </StackPanel>
            </ScrollViewer>
        </Grid>


        <Grid x:Name="GridSingleLight" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Visibility="Collapsed">
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel Margin="5">
                    <Label x:Name="lblSingleLightName" HorizontalAlignment="Center" Content="" FontSize="20" FontWeight="Bold" Margin="0,0,0,10"/>
                    <Border CornerRadius="4" BorderThickness="1" BorderBrush="Black">
                        <StackPanel Margin="5">
                            <Label Content="Helligkeit:"/>
                            <DockPanel VerticalAlignment="Center">

                                <DockPanel DockPanel.Dock="Right">
                                    <TextBox x:Name="TbBrightnessValueSingleLight" Text="{Binding ElementName=SlBrightnessSingleLight , Path=Value, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Right" Width="40" Margin="1"/>
                                    <CheckBox x:Name="CbSingleLightIsOn" DockPanel.Dock="Right" Width="45" HorizontalAlignment="Right" Margin="2,1,1,1" Click="CbSingleLightIsOn_Click"/>
                                </DockPanel>

                                <Slider x:Name="SlBrightnessSingleLight" Interval="1" IsSnapToTickEnabled="True" Maximum="254" DockPanel.Dock="Left" Margin="1" ValueChanged="SlBrightnessSingleLight_ValueChanged"/>

                            </DockPanel>
                        </StackPanel>
                    </Border>

                    <Border x:Name="BdColorChangegable" CornerRadius="4" BorderBrush="Black" BorderThickness="1" Margin="0,10,0,0" Visibility="Collapsed">
                        <StackPanel Margin="5">
                            <Label Content="Farbe:"/>

                            <StackPanel>
                                <Slider x:Name="SlColorHue" Margin="1" Maximum="65535" Visibility="Collapsed" ValueChanged="SlColorHue_ValueChanged" Interval="1" IsSnapToTickEnabled="True">
                                    <Slider.Background>
                                        <ImageBrush ImageSource="C:\Users\Coolj\source\repos\HueTest\HueTest\Pictures\HueColorScale.png"/>
                                    </Slider.Background>
                                </Slider>
                            </StackPanel>

                            <Slider x:Name="SlColorCT" Margin="1" Visibility="Collapsed" ValueChanged="SlColorCT_ValueChanged"/>

                            <Grid x:Name="GridXYColorSelector" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed">
                                <Image Source="C:\Users\Coolj\source\repos\HueTest\HueTest\Pictures\color_chroma.png" Height="300" Width="300" VerticalAlignment="Bottom" HorizontalAlignment="Right" Stretch="Fill" Margin="15"/>
                                <Canvas x:Name="CanColor" Height="295" Width="276" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="22,15,0,0">
                                    <Rectangle x:Name="Rectangle1" Fill="Black" Height="3" Width="3" 
                                           Canvas.Bottom="{Binding ElementName=SliderY, Path=Value, UpdateSourceTrigger=PropertyChanged}"  
                                           Canvas.Left="{Binding ElementName=SliderX, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                </Canvas>

                                <Slider x:Name="SliderX" VerticalAlignment="Bottom" Maximum="276" Margin="15,0,24,0" Background="#FFEEEEEE" Visibility="Visible" ValueChanged="SliderXY_ValueChanged"/>
                                <Slider x:Name="SliderY" Maximum="295" Margin="0,10,0,18" Orientation="Vertical" HorizontalAlignment="Left" Background="#FFEEEEEE" Visibility="Visible" ValueChanged="SliderXY_ValueChanged"/>
                            </Grid>

                            <Label x:Name="lblColorSampleSingleLight" Background="Transparent" Margin="4" Height="20"/>
                            <Label x:Name="lblIdSingleLight" Visibility="Collapsed"/>

                        </StackPanel>
                    </Border>

                </StackPanel>
            </ScrollViewer>
        </Grid>

        <!--#region Grid for LightsList Right -->
        <Grid x:Name="GridLightsOverview" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Visibility="Collapsed">
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <ListView Name="LvLightsOverviewList" 
                      HorizontalContentAlignment="Stretch"
                      Visibility="Visible"
                      Background="#FFEEEEEE"
                      IsSynchronizedWithCurrentItem="False"
                      SelectionMode="Single"
                      BorderThickness="0"
                          Margin="10,0,0,0"
                          SelectionChanged="LvLightsOverviewList_SelectionChanged">

                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">

                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#FFDDDDDD"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFC4E5F6"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>

                            </Style.Triggers>


                            <Setter Property="Background" Value="{Binding State.Backcolour}"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <Border Background="{TemplateBinding Background}"
                                        CornerRadius="4"
                                        Margin="8,8,8,8">

                                            <Grid Margin="4">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="60"/>
                                                </Grid.ColumnDefinitions>

                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>



                                                <DockPanel Grid.Row="0" LastChildFill="False">
                                                    <Label Grid.Row="0"
                                                       Content="{Binding Name}"
                                                       Foreground="Black"
                                                       FontSize="14"
                                                       FontWeight="Bold"
                                                       />

                                                    <Border CornerRadius="20" Width="20" Height="20" Background="{Binding State.Rcolour}" BorderBrush="Black" BorderThickness="1"/>
                                                </DockPanel>

                                                <Slider x:Name="SlBrightnessLightsOverView" Grid.Row="1" Maximum="255" Minimum="0" Value="{Binding State.Bri}" ValueChanged="SlBrightnessLightsOverView_ValueChanged"/>

                                                <CheckBox x:Name="CbIsOnLightsOverView" Grid.Column="1" Grid.Row="1" IsChecked="{Binding State.On}" HorizontalAlignment="Right" Click="CbIsOnLightsOverView_Click"/>
                                            </Grid>


                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </ScrollViewer>
        </Grid>

        <!--#endregion-->

    </Grid>

</Window>
